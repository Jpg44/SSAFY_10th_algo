import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.Comparator;
import java.util.StringTokenizer;

public class boj2 {
	public static void main(String[] args) throws IOException {

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int n = Integer.parseInt(st.nextToken());
		int c = Integer.parseInt(st.nextToken());
		int k=1;
		int k1=1;
		int num2=0;
		int[][] nc = new int[n][3];
		int []num=new int[n];
		st = new StringTokenizer(br.readLine());
		for (int i = 0; i < n; i++) {
			nc[i][0] = Integer.parseInt(st.nextToken());
			for(int j=0;j<k;j++) {
				if(num[j]!=nc[i][0]) {
					num2++;
				}
				if(num2==k) {
					num[k-1]=nc[i][0];
					k++;
					num2=0;
				}
			}num2=0;
		}
		for(int i=0;i<n;i++) {
			for(int j=0;j<k;j++) {
				if(num[j]==nc[i][0]) {
					nc[i][2]=j;
				}
			}
		}
		Arrays.sort(nc,new Comparator<int[]>() {

			@Override
			public int compare(int[] o1, int[] o2) {
				// TODO Auto-generated method stub
				return o1[0]-o2[0];
			}
		});
		for(int i=0;i<n;i++) {
		}
		for(int i=0;i<n-1;i++) {
			if(nc[i][0]==nc[i+1][0]) {
				while(i+k1<n&&nc[i][0]==nc[i+k1][0]) {
					k1++;
				}
				for(int j=0;j<k1;j++) {
					nc[i+j][1]=k1;
					
				}
				i+=k1-1;
				k1=1;
			}
		}
		Arrays.sort(nc,new Comparator<int[]>() {

			@Override
			public int compare(int[] o1, int[] o2) {
				// TODO Auto-generated method stub
				if(o1[1]==o2[1]) {
					return o1[2]-o2[2];
				}else {
				return o2[1]-o1[1];
			}}
		});
		for(int i=0;i<n;i++) {
			System.out.print(nc[i][0]+" ");
		}
	}
}
